version: 0.1.{build}
image:
- Visual Studio 2022
- Ubuntu2004
- macos-monterey
platform:
- Win32
- x86
- x64
configuration: Release
matrix:
  exclude:
    - platform: Win32
      image: Ubuntu2004
    - platform: Win32
      image: macos-monterey
    - platform: x86
      image: Visual Studio 2022
    - platform: x86
      image: macos-monterey

build: off
build_script:
    - ps: |
        cmake --build build --config Release
        cmake --install build --config Release

artifacts:
    - path: bin
      name: HedgeLib

for:
-
  matrix:
    only:
      - image: Visual Studio 2022

  install:
    - ps: |
        mkdir "$env:APPVEYOR_BUILD_FOLDER\bin"
        .\Get-Dependencies.ps1 -Architecture $env:PLATFORM
        Write-Host "Downloading Vulkan SDK..." -ForegroundColor Green
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe" -OutFile "Dependencies\vulkan-sdk.exe"
        Write-Host "Installing Vulkan SDK..." -ForegroundColor Green
        .\Dependencies\vulkan-sdk.exe --accept-licenses --default-answer --confirm-command install com.lunarg.vulkan.32bit
        $env:VULKAN_SDK = (Get-ChildItem C:\VulkanSDK\).FullName
        $env:PATH = "$env:PATH;$env:VULKAN_SDK\Bin"
        cmake -S . -B build "-DCMAKE_INSTALL_PREFIX=$env:APPVEYOR_BUILD_FOLDER\bin" -G "Visual Studio 17 2022" -A $env:PLATFORM
-
  matrix:
    only:
      - image: macos-monterey

  install:
    - sh: |
        mkdir Dependencies
        curl https://sdk.lunarg.com/sdk/download/latest/mac/vulkan-sdk.dmg --output Dependencies/vulkan-sdk.dmg
        VOLUME=`hdiutil attach Dependencies/vulkan-sdk.dmg | grep Volumes | awk '{print $3}'`
        cp -rf "$VOLUME/InstallVulkan.app" InstallVulkan.app
        hdiutil detach $VOLUME
        mkdir Dependencies/VulkanSDK
        sudo ./InstallVulkan.app/Contents/MacOS/InstallVulkan --root "$APPVEYOR_BUILD_FOLDER/Dependencies/VulkanSDK" --accept-licenses --default-answer --confirm-command install
        ls Dependencies/VulkanSDK
        cd Dependencies/VulkanSDK
        sudo python3 "$APPVEYOR_BUILD_FOLDER/Dependencies/VulkanSDK/install_vulkan.py"
        cd ../
        git clone https://github.com/martinus/robin-hood-hashing.git
        cd robin-hood-hashing
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DRH_STANDALONE_PROJECT=OFF
        sudo cmake --build build --config Release
        sudo cmake --install build --config Release
        cd ../../
        brew install rapidjson glm lz4 zlib glfw
        mkdir "$APPVEYOR_BUILD_FOLDER/bin"
        cmake -S . -B build "-DCMAKE_INSTALL_PREFIX=$APPVEYOR_BUILD_FOLDER/bin" -DCMAKE_BUILD_TYPE=Release
-
  matrix:
    only:
      - image: Ubuntu2004

  install:
    - sh: |
        if [ "$PLATFORM" == "x86" ]; then sudo apt-get update; sudo apt-get install -yq gcc-9-multilib g++-9-multilib; fi
        wget -qO - https://gist.githubusercontent.com/Radfordhound/6e6ce00535d14ae87d606ece93f1e336/raw/9796f644bdedaa174ed580a8aa6874ab82853170/install-lunarg-ubuntu-repo.sh | sh
        mkdir Dependencies && cd Dependencies
        git clone https://github.com/martinus/robin-hood-hashing.git
        cd robin-hood-hashing
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DRH_STANDALONE_PROJECT=OFF
        cmake --build build --config Release
        sudo cmake --install build --config Release
        cd ../../
        sudo apt install -yq rapidjson-dev libglm-dev liblz4-dev zlib1g-dev libglfw3-dev vulkan-sdk
        mkdir "$APPVEYOR_BUILD_FOLDER/bin"
        cmake -S . -B build "-DCMAKE_INSTALL_PREFIX=$APPVEYOR_BUILD_FOLDER/bin" -DCMAKE_BUILD_TYPE=Release
